/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useFrame } from '@react-three/fiber'
import { useGLTF } from "@react-three/drei";

export function SculptureModel(props) {
  const { nodes, materials } = useGLTF("sculpture.glb");
  const meshRef = useRef()

  //Animação
  useFrame(({ clock }) => {
    meshRef.current.rotation.y = clock.getElapsedTime() / 10
  })

  return (
    <group {...props} dispose={null}>
      <mesh
        ref={ meshRef }
        castShadow
        receiveShadow
        geometry={nodes.h.geometry}
        material={nodes.h.material}
        rotation={[3.1, 0.67, 2.24]}
        scale={0.04}
      />
    </group>
  );
}

useGLTF.preload("sculpture.glb");



export default SculptureModel